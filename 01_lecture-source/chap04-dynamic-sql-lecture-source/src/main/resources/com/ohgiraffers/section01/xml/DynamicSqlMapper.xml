<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.DynamicSqlMapper">
    <!-- 별칭 설정 config 파일에서 type 별칭 달기 -->
<!--    <resultMap id="menuResultMap" type="com.ohgiraffers.common.MenuDTO">-->
    <resultMap id="menuResultMap" type="MenuDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!-- 필기. <if> 태그 : test 속성의 조건에 해당 할 때만 엘리먼트 구문을 쿼리에 포함한다. -->
    <!-- 필기. gte , gt, lte, lt 등등 크거나 같음, 큼, 작거나 같음, 작음 -->
    <!-- 필기. <![CDATA[ 문장 ]]> 문장에 해당하는 공간에서는 부등호에 대한 표현이 자유로움 -->
    <select id="selectMenuByPrice" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
            MENU_CODE,
            MENU_NAME,
            MENU_PRICE,
            CATEGORY_CODE,
            ORDERABLE_STATUS
        FROM
            TBL_MENU
        WHERE
            ORDERABLE_STATUS = 'Y'
        <if test="price gte 0 and price lte 10000">
            <![CDATA[
                AND MENU_PRICE < #{price}
            ]]>
        </if>
        <if test="price gt 10000 and price lte 20000">
            AND MENU_PRICE BETWEEN 10000 AND #{price}
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND MENU_PRICE BETWEEN 20000 AND #{price}
        </if>
        <if test="price gt 30000">
            AND MENU_PRICE BETWEEN 30000 AND #{price}
        </if>
        ORDER BY MENU_CODE
    </select>
    <select id="searchMenu" parameterType="com.ohgiraffers.common.SearchCriteria" resultMap="menuResultMap">
        SELECT
            A.MENU_CODE,
            A.MENU_NAME,
            A.CATEGORY_CODE,
            A.ORDERABLE_STATUS
        FROM
            TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%', #{value}, '%')
        </if>
        <if test="condition == 'category'">
            AND B.CATEGORY_NAME = #{value}
        </if>
        ORDER BY A.MENU_CODE
    </select>

    <!-- 필기. <choose>(when/otherwise) 태그 : java 의 switch-case 문의 역할을 한다. -->
    <!-- 필기. 사용방법
            <choose>
                <when test="조건">
                    쿼리구문
                </when>
                ...
                <otherwise>
                    쿼리구문
                </otherwise>
            </choose>
     -->
    <!-- 필기. <when> 태그의 test 속성 조건에 부합하면 when 엘리먼트 구문을 쿼리에 포함시킨다.
              어떠한 when 조건도 만족하지 못하면 <otherwise> 엘리먼트 구문을 쿼리에 포함한다.
     -->
    <select id="searchMenuBySupCategory" parameterType="com.ohgiraffers.common.SearchCriteria" resultMap="menuResultMap">
        SELECT
            MENU_CODE,
            MENU_NAME,
            MENU_PRICE,
            CATEGORY_CODE,
            ORDERABLE_STATUS
        FROM
            TBL_MENU
        WHERE ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
                AND CATEGORY_CODE IN (1, 4, 5)
            </when>
            <when test="value == '음료'">
                AND CATEGORY_CODE IN (2)
            </when>
            <otherwise>
                AND CATEGORY_CODE IN (3)
            </otherwise>
        </choose>
        ORDER BY MENU_CODE
    </select>

    <!-- 필기. <foreach> 태그 : JAVA 의 for문처럼 동작을 한다.
                1. collection 속성 : 반복을 수행할 대상
                2. item 속성 : 반복을 수행할 때마다 꺼내올 값의 이름 설정
                3. open 속성 : <foreach> 엘리먼트 구문의 가장 앞에 올 문자
                4. separator 속성 : 반복이 수행될 때 꺼내온 item 사이에 들어갈 문자
                5. close 속성 : <foreach> 엘리먼트 구문의 마지막에 올 문자
     -->
    <select id="searchMenuByRandomMenuCode" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
            MENU_CODE,
            MENU_NAME,
            MENU_PRICE,
            CATEGORY_CODE,
            ORDERABLE_STATUS
        FROM
            TBL_MENU
        WHERE
            ORDERABLE_STATUS = 'Y'
        AND
            MENU_CODE IN
        <foreach collection="randomMenuCodeList" item="menuCode" open="(" separator=", " close=")">
            #{menuCode}
        </foreach>
        <!-- parameter 객체를 안 줘도 static 필드나 static 메소드로 직접 접근을 해서 직접 받아올 수가 있다. 그러면 mapper 인터페이스와 service 에서 전달인자를 안 줘도 된다.-->
<!--        <foreach collection="@com.ohgiraffers.section01.xml.Application@createRandomMenuCodeList()" item="menuCode" open="(" separator=", " close=")">-->
<!--            #{menuCode}-->
<!--        </foreach>-->
     </select>
</mapper>